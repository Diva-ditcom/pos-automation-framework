name: Simple POS Test Connection

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test-connection:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install pytest pywinauto pytest-html
        pip install -r requirements.txt
      continue-on-error: true
    
    - name: Run framework setup check
      run: |
        python -c "print('🚀 Framework setup check...')"
        python -c "import sys; print(f'Python version: {sys.version}')"
        python -c "try: import pywinauto; print('✅ pywinauto imported successfully'); except: print('❌ pywinauto import failed')"
        python -c "try: import pytest; print('✅ pytest imported successfully'); except: print('❌ pytest import failed')"
    
    - name: Test CSV data loading
      run: |
        python -c "
        try:
            from data.csv_data_manager import csv_data_manager
            print('✅ CSV Manager loaded successfully')
            scenarios = csv_data_manager.list_available_scenarios()
            print(f'📊 Found {len(scenarios)} test scenarios: {scenarios}')
        except Exception as e:
            print(f'❌ CSV Manager failed: {e}')
        "
      continue-on-error: true
    
    - name: Run simple connection test
      run: |
        python -c "
        print('🧪 Running simple connection test...')
        try:
            from config.config import Config
            config = Config()
            print('✅ Configuration loaded successfully')
            print('✅ Simple connection test PASSED')
        except Exception as e:
            print(f'❌ Connection test failed: {e}')
        "
      continue-on-error: true
    
    - name: Run one basic test (dry run)
      run: |
        python -m pytest tests/pos_automation/test_01_basic_cash_sale.py::TestBasicCashSale::test_add_single_item_complete_with_cash --collect-only -v
      continue-on-error: true
    
    - name: Create test report
      run: |
        echo "🎉 GitHub Actions Connection Test Completed!" > test_report.txt
        echo "Date: $(Get-Date)" >> test_report.txt
        echo "Status: Connection Established" >> test_report.txt
        echo "Framework: POS Automation" >> test_report.txt
        cat test_report.txt
    
    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: connection-test-report
        path: test_report.txt
